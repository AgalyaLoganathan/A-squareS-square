<!doctype html>
<html lang="en">
<head>
	<meta charset="utf-8" />
	<link rel="icon" type="image/png" href="img/favicon.ico">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

	<title>Student Visualizations</title>

	<meta content='width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0' name='viewport' />
    <meta name="viewport" content="width=device-width" />


    <!-- Bootstrap core CSS     -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet" />

    <!-- Animation library for notifications   -->
    <link href="bootstrap/css/animate.min.css" rel="stylesheet"/>

    <!--  Light Bootstrap Table core CSS    -->
    <link href="bootstrap/css/light-bootstrap-dashboard.css" rel="stylesheet"/>


    <!--  CSS for Demo Purpose, don't include it in your project     -->
    <!-- <link href="assets/css/demo.css" rel="stylesheet" /> -->


    <!--     Fonts and icons     -->
    <link href="http://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
    <link href='http://fonts.googleapis.com/css?family=Roboto:400,700,300' rel='stylesheet' type='text/css'>
    <link href="bootstrap/css/pe-icon-7-stroke.css" rel="stylesheet" />
	<link href="bootstrap/css/d3.stackedbar.css" rel="stylesheet"  />
	<style>
	   body {
		 font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
		 margin: auto;
		 position: relative;
		 /*width: 960px;*/
	   }

	   text {
		 font: 10px sans-serif;
	   }

	   .axis path,
	   .axis line {
		 fill: none;
		 stroke: #000;
		 shape-rendering: crispEdges;
	   }

	   form {
		 position: absolute;
		 right: 10px;
		 top: 10px;
	   }

	   svg {
        width: 100%;
        height: 100%;
        position: center;
    }
    text{
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
    }
    .toolTip {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        position: absolute;
        display: none;
        width: auto;
        height: auto;
        background: none repeat scroll 0 0 white;
        border: 0 none;
        border-radius: 8px 8px 8px 8px;
        box-shadow: -3px 3px 15px #888888;
        color: black;
        font: 12px sans-serif;
        padding: 5px;
        text-align: center;
    }
    .legend {
        font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
        font-size: 60%;
    }
    text {
        font: 10px sans-serif;
    }
    .axis text {
        font: 10px sans-serif;
    }
    .axis path{
        fill: none;
        stroke: #000;
    }
    .axis line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }
    .x.axis path {
        display: none;
    }

	   </style>

</head>
<body>

<div class="wrapper">
    <div class="sidebar" data-color="purple" data-image="img/sidebar-5.jpg">

    <!--   you can change the color of the sidebar using: data-color="blue | azure | green | orange | red | purple" -->
	<div class="sidebar-wrapper">
		<div class="logo">
			<a href=# class="simple-text">
				%Student Name%
			</a>
		</div>

		<ul class="nav">
			<li>
				<a href="dashboard.ejs">
					<i class="pe-7s-graph"></i>
					<p>Dashboard</p>
				</a>
			</li>
			<li>
				<a href="profile">
					<i class="pe-7s-user"></i>
					<p>User Profile</p>
				</a>
			</li>
			<li>
				<a href="table">
					<i class="pe-7s-note2"></i>
					<p>Leaderboard</p>
				</a>
			</li>
			<li class="active">
				<a href="typography.ejs">
					<i class="pe-7s-news-paper"></i>
					<p>Visualizations</p>
				</a>
			</li>
			<li>
				<a href="study_group.ejs">
					<i class="pe-7s-rocket"></i>
					<p>STUDY GROUPS</p>
				</a>
			</li>
		</ul>
	</div>
</div>


    <div class="main-panel">
        <nav class="navbar navbar-default navbar-fixed">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navigation-example-2">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    <a class="navbar-brand" href="#">Typography</a>
                </div>
                <div class="collapse navbar-collapse">
                    <ul class="nav navbar-nav navbar-right">
                        <li>
                           <a href="profile">
                               Account
                            </a>
                        </li>
                        <li>
                            <a href="logout" id="logout">
                                Log out
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

		<div class="content">
			<div class="container-fluid">
				<!-- <div class="row">
					<div class="col-md-12">
						<div class="card">
							<div class="header">
								<h4 class="title">Performance metrics</h4>
								<p class="category">
									Against other users
								</p>
							</div>
							<div class="content" id="userViz">
							</div>
						</div>
					</div>
				</div> -->
				<div class="row">
					<div class="col-md-12">
						<div class="card" id="stackedBarDiv">
							<div class="header">
								<h4 class="title">Performance metrics</h4>
								<p class="category">
									Against the group
								</p>
							</div>
							<div class="content">
								<div id="stackedBar">

								</div>
							</div>
						</div>
					</div>
				</div>

				<!-- <div class="row">
					<div class="col-md-12">
						<div class="card">
							<div class="header">
								<h4 class="title">Instructor category wise</h4>
							</div>
							<div class="content" id="sankeyChartDiv">
								<div id="sankeyChart">

								</div>
							</div>
						</div>
					</div>
				</div>

				<div class="row">
					<div class="col-md-12">
						<div class="card">
							<div class="header">
								<h4 class="title">HeatMap STudent perf</h4>
							</div>
							<div class="content" id="heatMapDiv">
								<div id="heatMap">

								</div>
							</div>
						</div>
					</div>
				</div> -->
				<div class="row">
					<div class="col-md-12">
						<div class="card">
							<div class="header">
								<h4 class="title">Student perf vs Topper</h4>
							</div>
							<div class="content" id="radarChartDiv" width="400" height="600">
								<canvas id="radarChart">

								</canvas>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
    </div>
</div>
</body>

        <!--   Core JS Files   -->
    <script src="bootstrap/js/jquery-1.12.3.min.js" type="text/javascript"></script>
	<script src="bootstrap/js/bootstrap.min.js" type="text/javascript"></script>

	<!--  Checkbox, Radio & Switch Plugins -->
	<script src="bootstrap/js/bootstrap-checkbox-radio-switch.js"></script>

	<!--  Charts Plugin -->
	<script src="bootstrap/js/chartist.min.js"></script>

    <!--  Notifications Plugin    -->
    <script src="bootstrap/js/bootstrap-notify.js"></script>

    <!--  Google Maps Plugin    -->
    <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>

    <!-- Light Bootstrap Table Core javascript and methods for Demo purpose -->
	<script src="bootstrap/js/light-bootstrap-dashboard.js"></script>

	<!-- Light Bootstrap Table DEMO methods, don't include it in your project! -->
	<!-- <script src="assets/js/demo.js"></script> -->
	<script src="//d3js.org/d3.v3.min.js"></script>
	<script src="http://dimplejs.org/dist/dimple.v2.1.6.min.js"></script>
	<script src="js/d3.core.js"></script>
	<script src="js/d3.stackedbar.js"></script>
	<script src="http://d3js.org/d3.v3.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/d3-legend/1.7.0/d3-legend.min.js"></script>
	<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
	<script src= "https://cdn.zingchart.com/zingchart.min.js"></script>
		<script> zingchart.MODULESDIR = "https://cdn.zingchart.com/modules/";
		ZC.LICENSE = ["569d52cefae586f634c54f86dc99e6a9","ee6b7db5b51705a13dc2339db3edaf6d"];</script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.0.1/Chart.bundle.js"></script>

<script>
var sankeyData = [
  [ 'Strong', 'X', 5 ],
  [ 'Strong', 'Y', 7 ],
  [ 'Strong', 'Z', 6 ],
  [ 'Weak', 'X', 2 ],
  [ 'Weak', 'Y', 9 ],
  [ 'Weak', 'Z', 4 ],
  [ 'Strong', 'A', 5 ],
  [ 'Strong', 'B', 7 ],
  [ 'Strong', 'C', 6 ],
  [ 'Weak', 'A', 2 ],
  [ 'Weak', 'B', 9 ],
  [ 'Weak', 'C', 4 ],
  [ 'Strong', 'D', 5 ],
  [ 'Strong', 'E', 7 ],
  [ 'Strong', 'F', 6 ],
  [ 'Weak', 'D', 2 ],
  [ 'Weak', 'E', 9 ],
  [ 'Weak', 'F', 4 ],
  [ 'Strong', 'G', 5 ],
  [ 'Strong', 'H', 7 ],
  [ 'Strong', 'I', 6 ],
  [ 'Weak', 'G', 2 ],
  [ 'Weak', 'H', 9 ],
  [ 'Weak', 'I', 4 ]
];
function drawSankey(){
	google.charts.load('current', {'packages':['sankey']});
      google.charts.setOnLoadCallback(drawChart);

      function drawChart() {
        var data = new google.visualization.DataTable();
        data.addColumn('string', 'From');
        data.addColumn('string', 'To');
        data.addColumn('number', 'Weight');
        data.addRows(sankeyData);

        // Sets chart options.
        var options = {
          width: 1000,
		  height: 600
        };

        // Instantiates and draws our chart, passing in some options.
        var chart = new google.visualization.Sankey(document.getElementById('sankeyChart'));
        chart.draw(data, options);
      }
}

var heatMapY = [
    {
        "values":[106,122,203,245,261,202,309,410,451,304,203,425,191,206,263,284,251,382,391,405,321,298,302,194],
        "text":"StudentName1"},
    {
        "values":[175,205,283,304,291,258,311,406,125,206,307,254,281,352,395,461,201,302,153,94,101,201,143,124],
        "text":"StudentName2"},
    {
        "values":[101,108,93,84,71,122,253,194,201,92,143,104,221,242,263,304,178,222,243,184,101,92,83,64],
        "text":"StudentName3"},
    {
        "values":[301,402,433,294,406,382,325,407,198,208,298,498,401,452,397,485,508,594,493,454,321,382,403,204],
        "text":"StudentName4"},
    {
        "values":[211,208,175,406,199,207,253,264,301,295,303,284,107,182,193,204,171,250,93,94,106,142,153,204],
        "text":"StudentName5"},
    {
        "values":[201,245,153,174,201,172,309,402,401,392,303,244,254,292,103,144,201,192,175,254,311,252,193,144],
        "text":"StudentName6"}
]
	var heatMapX = [
		"Topic 1","Topic 2 AM","Topic 3 AM","Topic 4 AM","Topic 5 AM","Topic 6 AM","Topic 7 AM","Topic 8 AM","Topic 9 AM","Topic 10 AM","Topic 11 AM","Topic 12 PM","Topic 1 PM","Topic 2 PM","Topic 2 PM","Topic 4 PM","Topic 5 PM","Topic 6 PM","Topic 7 PM","Topic 8 PM","Topic 9 PM","Topic 10 PM","Topic 11 PM","Topic 12 AM"
	]
function drawHeatMap(){
	zingchart.THEME='classic';
var myConfig = {
    "type": "piano",
    "background-color": "#325598 #10203a",
    "fill-type": "radial",
    "plotarea": {
        "margin": "30px 30px 85px 105px",
        "background-color": "none"
    },
    "scale-x": {
        "values": heatMapX,
        "text-align": "right",
        "items-overlap": true,
        "max-labels": 999,
        "line-color": "#000",
        "line-width": "2px",
        "alpha": 0.5,
        "guide": {
            "visible": false
        },
        "label": {
            "text": "Local Time for Call Center Region",
            "padding-top": "15px",
            "font-family": "arial",
            "font-size": "12px",
            "font-color": "#fff",
            "bold": true
        },
        "item": {
            "font-angle": -90,
            "padding-top": "5px",
            "font-color": "#93abc9",
            "font-family": "arial",
            "font-size": "10px",
            "rules": [
                {
                    "rule": "%i %2 != 0",
                    "visible": false
                }
            ]
        },
        "tick": {
            "visible": false
        }
    },
    "scale-y": {
        "values": [
            "Student Name 1",
            "Student Name 2",
            "Student Name 3",
            "Student Name 4",
            "Student Name 5",
            "Student Name 6"
        ],
        "line-color": "#000",
        "line-width": "2px",
        "alpha": 0.5,
        "guide": {
            "visible": false
        },
        "label": {
            "text": "Call Center Location",
            "padding-right": "20px",
            "font-family": "arial",
            "font-size": "12px",
            "font-color": "#fff",
            "bold": true
        },
        "tick": {
            "line-color": "#000",
            "alpha": 0.5
        },
        "item": {
            "padding-right": "5px",
            "font-color": "#93abc9",
            "font-family": "arial",
            "font-size": "10px",
            "text-align": "right"
        }
    },
    "plot": {
        "value-box": {
            "visible": false
        },
        "aspect": "brightness",
        "rules": [
            {
                "rule": "%v < 200",
                "background-color": "#7000ac"
            },
            {
                "rule": "%v >= 200 && %v < 375",
                "background-color": "#3e99cf"
            },
            {
                "rule": "%v >= 375",
                "background-color": "#d9dde8"
            }
        ]
    },
    "tooltip": {
        "shadow": 0,
        "text": "Score in %k:<br><b>%v</b>",
        "font-color": "#fff",
        "font-family": "Arial",
        "font-size": "10px",
        "font-weight": "normal",
        "padding": "5px 10px",
        "border-radius": "8px",
        "border-width": "0px",
        "border-color": "none"
    },
    "series": heatMapY
};

zingchart.render({
	id : 'heatMap',
	data : myConfig,
	height: 600,
	width: 1000
});
}

// var radarTopics = ["Topic1", "Topic2", "Topic3", "Topic4", "Topic5", "Topic6", "Topic7", "Topic8", "Topic9", "Topic10", "Topic11", "Topic12", "Topic13", "Topic14"];
// var radarCurrentStudent = [65, 59, 90, 81, 56, 55, 40,65, 59, 90, 61, 56, 55, 40];
// var radarTopper = [88, 78, 90, 79, 96, 87, 100, 88, 70, 70, 99, 96, 77, 100];
// var radarData = {
//     labels: radarTopics,
//     datasets: [
//         {
//             label: "Current Student",
//             backgroundColor: "rgba(179,181,198,0.2)",
//             borderColor: "rgba(179,181,198,1)",
//             pointBackgroundColor: "rgba(179,181,198,1)",
//             pointBorderColor: "#fff",
//             pointHoverBackgroundColor: "#fff",
//             pointHoverBorderColor: "rgba(179,181,198,1)",
//             data: radarCurrentStudent
//         },
//         {
//             label: "Class Topper",
//             backgroundColor: "rgba(255,99,132,0.2)",
//             borderColor: "rgba(255,99,132,1)",
//             pointBackgroundColor: "rgba(255,99,132,1)",
//             pointBorderColor: "#fff",
//             pointHoverBackgroundColor: "#fff",
//             pointHoverBorderColor: "rgba(255,99,132,1)",
//             data: radarTopper
//         }
//     ]
// };

function drawRadarChart(radarData){
	var ctx = document.getElementById("radarChart");
	var myRadarChart = new Chart(ctx, {
    type: 'radar',
    data: radarData,
    // options: radarOptions
});
}

function drawD3(){
	console.log("inn d3");
	var divWidth = $(".row").width();
	var divHeight = $(".row").height();

	var n = 4, // number of layers
		m = 100, // number of samples per layer
		stack = d3.layout.stack(),
		layers = stack(d3.range(n).map(function() { return bumpLayer(m, .1); })),
		yGroupMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y; }); }),
		yStackMax = d3.max(layers, function(layer) { return d3.max(layer, function(d) { return d.y0 + d.y; }); });

	var margin = {top: 40, right: 10, bottom: 20, left: 10},
		width = divWidth - margin.left - margin.right,
		height = 500 - margin.top - margin.bottom;

	var x = d3.scale.ordinal()
		.domain(d3.range(m))
		.rangeRoundBands([0, width], .08);

	var y = d3.scale.linear()
		.domain([0, yStackMax])
		.range([height, 0]);

	var color = d3.scale.linear()
		.domain([0, n - 1])
		.range(["#aad", "#556"]);

	var xAxis = d3.svg.axis()
		.scale(x)
		.tickSize(0)
		.tickPadding(6)
		.orient("bottom");

	var svg = d3.select("#userViz").append("svg")
		.attr("id","userVizSvg")
		.attr("width", width + margin.left + margin.right)
		.attr("height", height + margin.top + margin.bottom)
	  .append("g")
		.attr("transform", "translate(" + margin.left + "," + margin.top + ")");

	var layer = svg.selectAll(".layer")
		.data(layers)
	  .enter().append("g")
		.attr("class", "layer")
		.style("fill", function(d, i) { return color(i); });

	var rect = layer.selectAll("rect")
		.data(function(d) { return d; })
	  .enter().append("rect")
		.attr("x", function(d) { return x(d.x); })
		.attr("y", height)
		.attr("width", x.rangeBand())
		.attr("height", 0);

	rect.transition()
		.delay(function(d, i) { return i * 10; })
		.attr("y", function(d) { return y(d.y0 + d.y); })
		.attr("height", function(d) { return y(d.y0) - y(d.y0 + d.y); });

		rect.selectAll("text")
		      .data(function(d) { return d.y; })
		      .enter()
		      .append("text")
		      .attr("x", 75)
		      .attr("y", function(d, i) { return y(d.y1) + (y(d.y0) - y(d.y1))/2; })
		      .style("text-anchor", "middle")
		      .text("test")

	svg.append("g")
		.attr("class", "x axis")
		.attr("transform", "translate(0," + height + ")")
		.call(xAxis);

	d3.selectAll("input").on("change", change);

	var timeout = setTimeout(function() {
	  d3.select("input[value=\"grouped\"]").property("checked", true).each(change);
	}, 2000);

	function change() {
	  clearTimeout(timeout);
	  if (this.value === "grouped") transitionGrouped();
	  else transitionStacked();
	}

	function transitionGrouped() {
	  y.domain([0, yGroupMax]);

	  rect.transition()
		  .duration(500)
		  .delay(function(d, i) { return i * 10; })
		  .attr("x", function(d, i, j) { return x(d.x) + x.rangeBand() / n * j; })
		  .attr("width", x.rangeBand() / n)
		.transition()
		  .attr("y", function(d) { return y(d.y); })
		  .attr("height", function(d) { return height - y(d.y); });
	}

	function transitionStacked() {
	  y.domain([0, yStackMax]);

	  rect.transition()
		  .duration(500)
		  .delay(function(d, i) { return i * 10; })
		  .attr("y", function(d) { return y(d.y0 + d.y); })
		  .attr("height", function(d) { return y(d.y0) - y(d.y0 + d.y); })
		.transition()
		  .attr("x", function(d) { return x(d.x); })
		  .attr("width", x.rangeBand());
	}

	// Inspired by Lee Byron's test data generator.
	function bumpLayer(n, o) {

	  function bump(a) {
		var x = 1 / (.1 + Math.random()),
			y = 2 * Math.random() - .5,
			z = 10 / (.1 + Math.random());
		for (var i = 0; i < n; i++) {
		  var w = (i / n - y) * z;
		  a[i] += x * Math.exp(-w * w);
		}
	  }

	  var a = [], i;
	  for (i = 0; i < n; ++i) a[i] = o + o * Math.random();
	  for (i = 0; i < 5; ++i) bump(a);
	  return a.map(function(d, i) { return {x: i, y: Math.max(0, d)}; });
	}

}

function wrap(text, width) {
	text.each(function() {
		var text = d3.select(this),
				words = text.text().split(/\s+/).reverse(),
				word,
				line = [],
				lineNumber = 0,
				lineHeight = 1.1, // ems
				y = text.attr("y"),
				dy = parseFloat(text.attr("dy")),
				tspan = text.text(null).append("tspan").attr("x", 0).attr("y", y).attr("dy", dy + "em");
		while (word = words.pop()) {
			line.push(word);
			tspan.text(line.join(" "));
			if (tspan.node().getComputedTextLength() > width) {
				line.pop();
				tspan.text(line.join(" "));
				line = [word];
				tspan = text.append("tspan").attr("x", 0).attr("y", y).attr("dy", ++lineNumber * lineHeight + dy + "em").text(word);
			}
		}
	});
}
// var dataset = [
// 	{label:"Week1", "a":25, "b":40, "c": 15, "d":20, "e": 10, "f":5 , "g": 14},
// 	{label:"week2", "a":5, "b":30, "c": 50, "d":15},
// 	{label:"week3", "a":20, "b":30, "c": 40, "d":10},
// 	{label:"week4", "a":10, "b":40, "c": 45, "d":5},
// 	{label:"week5", "a":5, "b":15, "c": 40, "d":40},
// 	{label:"Week6", "a":25, "b":40, "c": 15, "d":20},
// 	{label:"week7", "a":5, "b":30, "c": 50, "d":15},
// 	{label:"week8", "a":20, "b":30, "c": 40, "d":10},
// 	{label:"week9", "a":10, "b":40, "c": 45, "d":5},
// 	{label:"week10", "a":5, "b":15, "c": 40, "d":40},
// 	{label:"Week11", "a":25, "b":40, "c": 15, "d":20},
// 	{label:"week12", "a":5, "b":30, "c": 50, "d":15},
// 	{label:"week13", "a":20, "b":30, "c": 40, "d":10},
// 	{label:"week14", "a":10, "b":40, "c": 45, "d":5},
// 	{label:"week15", "a":5, "b":15, "c": 40, "d":40},
// 	{label:"Week16", "a":25, "b":40, "c": 15, "d":20},
// 	{label:"week17", "a":5, "b":30, "c": 50, "d":15},
// 	{label:"week18", "a":20, "b":30, "c": 40, "d":10},
// 	{label:"week19", "a":10, "b":40, "c": 45, "d":5},
// 	{label:"week20", "a":5, "b":15, "c": 40, "d":40},
//
// ];
function drawStackedBar(dataset){
	var margin = {top: (parseInt(d3.select('#stackedBarDiv').style('height'), 10)/20), right: (parseInt(d3.select('#stackedBarDiv').style('width'), 10)/20), bottom: (parseInt(d3.select('#stackedBarDiv').style('height'), 10)/6), left: (parseInt(d3.select('#stackedBarDiv').style('width'), 10)/20)},
			width = parseInt(d3.select('#stackedBar').style('width'), 10) - margin.left - margin.right,
			height = parseInt(d3.select('#stackedBar').style('height'), 10) - margin.top - margin.bottom;
	var x = d3.scale.ordinal()
			.rangeRoundBands([0, width], .1,.3);
	var y = d3.scale.linear()
			.rangeRound([height, 0]);
	var colorRange = d3.scale.category20();
	var color = d3.scale.ordinal()
			.range(colorRange.range());
	var xAxis = d3.svg.axis()
			.scale(x)
			.orient("bottom");
	var yAxis = d3.svg.axis()
			.scale(y)
			.orient("left")
			.tickFormat(d3.format(".2s"));
	var svg = d3.select("#stackedBar").append("svg")
			.attr("width", width + margin.left + margin.right)
			.attr("height", height + margin.top + margin.bottom)
			.append("g")
			.attr("transform", "translate(" + margin.left + "," + margin.top + ")");
	var divTooltip = d3.select("#stackedBar").append("div").attr("class", "toolTip");
	color.domain(d3.keys(dataset[0]).filter(function(key) { return key !== "label"; }));
	dataset.forEach(function(d) {
		var y0 = 0;
		d.values = color.domain().map(function(name) { return {name: name, y0: y0, y1: y0 += +d[name]}; });
		d.total = d.values[d.values.length - 1].y1;
	});
	x.domain(dataset.map(function(d) { return d.label; }));
	y.domain([0, d3.max(dataset, function(d) { return d.total; })]);
	svg.append("g")
			.attr("class", "x axis")
			.attr("transform", "translate(0," + height + ")")
			.call(xAxis);
	svg.append("g")
			.attr("class", "y axis")
			.call(yAxis)
			.append("text")
			.attr("transform", "rotate(-90)")
			.attr("y", 9)
			.attr("dy", ".71em")
			.style("text-anchor", "end")
			.text("Satisfaction %");
	var bar = svg.selectAll(".label")
			.data(dataset)
			.enter().append("g")
			.attr("class", "g")
			.attr("transform", function(d) { return "translate(" + x(d.label) + ",0)"; });
	svg.selectAll(".x.axis .tick text")
			.call(wrap, x.rangeBand());

	var bar_enter = bar.selectAll("rect")
	.data(function(d) { return d.values; })
	.enter();

bar_enter.append("rect")
	.attr("width", x.rangeBand())
	.attr("y", function(d) { return y(d.y1); })
	.attr("height", function(d) { return y(d.y0) - y(d.y1); })
	.style("fill", function(d) { return color(d.name); });

bar_enter.append("text")
	.text(function(d) { return d3.format(".2s")(d.y1-d.y0)+"%"; })
	.attr("y", function(d) { return y(d.y1)+(y(d.y0) - y(d.y1))/2; })
	.attr("x", x.rangeBand()/3)
	.style("fill", '#ffffff');

	bar.on("mousemove", function(d){
				divTooltip.style("left", d3.event.pageX+10+"px");
				divTooltip.style("top", d3.event.pageY-25+"px");
				divTooltip.style("display", "inline-block");
				var elements = document.querySelectorAll(':hover');
				l = elements.length
				l = l-1
				element = elements[l].__data__
				value = element.y1 - element.y0
				divTooltip.html((d.label)+"<br>"+element.name+"<br>"+value+"%");
			});
	bar.on("mouseout", function(d){
				divTooltip.style("display", "none");
			});
	svg.append("g")
			.attr("class", "legendLinear")
			.attr("transform", "translate(0,"+(height+30)+")");
	var legend = d3.legend.color()
			.shapeWidth(height/4)
			.shapePadding(10)
			.orient('horizontal')
			.scale(color);
	svg.select(".legendLinear")
			.call(legend);
}

	$(document).ready(function(){
		// drawD3();
		 $('#stackedBar').height(504);
		//  $('#stackedBarDiv').height(700);
	// 	 var stackedBar1 = new D3StackedBar({
	//     container: "#stackedBar",
	//     margin: {top: 20, left: 50, bottom: 50, right: 20},
	//     spacing: 0.5,
	//     dataUrl: null,
	//     data: [
	//             { key: "category 1", values: [ { x: "FY2008", y: 10 }, { x: "FY2009", y: 20 }, { x: "FY2010", y: 30 }, { x: "FY2011", y: 5 }, { x: "FY2012", y: 15 } ]},
	//             { key: "category 2", values: [ { x: "FY2008", y: 20 }, { x: "FY2009", y: -40 }, { x: "FY2010", y: 20 }, { x: "FY2011", y: 5 }, { x: "FY2012", y: 10 } ]},
	//             { key: "category 3", values: [ { x: "FY2008", y: -10 }, { x: "FY2009", y: 10 }, { x: "FY2010", y: 10 }, { x: "FY2011", y: -10 }, { x: "FY2012", y: 10 } ]},
	//           ],
	//     resizable: true,
	//     showLegend: true,
	//     showTooltip: true,
	//     showRuler: true,
	//     showHorizontalGrid: true,
	//     displayTable: true,
	//     yFormat: function(d) { return d; },
	//     colors: ['rgb(166,206,227)','rgb(31,120,180)','rgb(178,223,138)','rgb(51,160,44)','rgb(251,154,153)','rgb(227,26,28)','rgb(253,191,111)','rgb(255,127,0)','rgb(202,178,214)','rgb(106,61,154)','rgb(255,255,153)','rgb(177,89,40)'],
	//     xTickSize: function(base) { return 10; },
	//     yTickSize: function(base) { return 10; },
	//     xTicks: 5,
	//     yTicks: 5,
	//     xTickPadding: 5,
	//     yTickPadding: 5,
	//     yAxisTranslate: function(base) { return "translate(0,0)"; },
	//     xAxisTranslate: function(base) { return "translate(0,"+base.height+")"; },
	//     xTickFormat: function(d) { return d; },
	//     yTickFormat: function(d) { return d; },
	//     tooltipText: function(d, element) { return "<p>Tooltip<br />x: "+d.x+"<br />y:"+d.y+"<p>"; }
	// });
		// var stackedBar = new D3StackedBar({
		// 	margin: {top: 20, left: 50, bottom: 50, right: 20},
		// 	container: "#stackedBar",
		// 	// data: [
		// 	//     { key: "category 1", values: [ { x: "FY2008", y: 10 }, { x: "FY2009", y: 20 }, { x: "FY2010", y: 30 }, { x: "FY2011", y: 5 }, { x: "FY2012", y: 15 } ]},
		// 	//     { key: "category 2", values: [ { x: "FY2008", y: 20 }, { x: "FY2009", y: -40 }, { x: "FY2010", y: 20 }, { x: "FY2011", y: 5 }, { x: "FY2012", y: 10 } ]},
		// 	//     { key: "category 3", values: [ { x: "FY2008", y: -10 }, { x: "FY2009", y: 10 }, { x: "FY2010", y: 10 }, { x: "FY2011", y: -10 }, { x: "FY2012", y: 10 } ]},
		// 	//   ],
		//
		// 	data: [
		//             { key: "Subtopic1", values: [ { x: "week1", y: 10 , text:"s1"}, { x: "week2", y: 20, text:"s1" }, { x: "week3", y: 30, text:"s1" }, { x: "week4", y: 5, text:"s1" }, { x: "week5", y: 15, text:"s1" } ]},
		//             { key: "Subtopic2", values: [ { x: "week1", y: 20, text:"s2" }, { x: "week2", y: 40, text:"s2" }, { x: "week3", y: 20, text:"s2" }, { x: "week4", y: 5, text:"s2" }, { x: "week5", y: 10, text:"s2" } ]},
		//             { key: "Subtopic3", values: [ { x: "week1", y: 0, text:"s3" }, { x: "week2", y: 10, text:"s3" }, { x: "week3", y: 10 , text:"s3"}, { x: "week4", y: 10, text:"s3" }, { x: "week5", y: 10, text:"s3" } ]},
		// 			{ key: "Subtopic4", values: [ { x: "week1", y: 10 , text:"s1"}, { x: "week2", y: 20, text:"s1" }, { x: "week3", y: 30, text:"s1" }, { x: "week4", y: 5, text:"s1" }, { x: "week5", y: 15, text:"s1" } ]},
		// 			{ key: "Subtopic5", values: [ { x: "week1", y: 20, text:"s2" }, { x: "week2", y: 40, text:"s2" }, { x: "week3", y: 20, text:"s2" }, { x: "week4", y: 5, text:"s2" }, { x: "week5", y: 10, text:"s2" } ]},
		// 			{ key: "Subtopic6", values: [ { x: "week1", y: 0, text:"s3" }, { x: "week2", y: 10, text:"s3" }, { x: "week3", y: 10 , text:"s3"}, { x: "week4", y: 10, text:"s3" }, { x: "week5", y: 10, text:"s3" } ]},
		// 			{ key: "Subtopic7", values: [ { x: "week1", y: 10 , text:"s1"}, { x: "week2", y: 20, text:"s1" }, { x: "week3", y: 30, text:"s1" }, { x: "week4", y: 5, text:"s1" }, { x: "week5", y: 15, text:"s1" } ]},
		// 			{ key: "Subtopic8", values: [ { x: "week1", y: 20, text:"s2" }, { x: "week2", y: 40, text:"s2" }, { x: "week3", y: 20, text:"s2" }, { x: "week4", y: 5, text:"s2" }, { x: "week5", y: 10, text:"s2" } ]},
		// 			{ key: "Subtopic9", values: [ { x: "week1", y: 0, text:"s3" }, { x: "week2", y: 10, text:"s3" }, { x: "week3", y: 10 , text:"s3"}, { x: "week4", y: 10, text:"s3" }, { x: "week5", y: 10, text:"s3" } ]},
		//
		// 		],
		// 		showTooltip : true,
		// 		showLegend: true,
		// 		tooltipText : function(d, element) {console.log(d.text);return d.text}
		// });
		//stackedBar.show();

		// var width = Math.min($(".card").width(), $("#userViz").width());
		// $(".card").width(width);
		// $("#userViz").width(width);
		// $("#userVizSvg").width(width);


	// {
	// 	week:{
	// 		weekNo:{
	// 			Subtopic1:{
	// 				name:
	// 				qn:
	// 			},
	// 			Subtopic2:{
	// 				name:
	// 				qn:
	// 			}
	// 		}
	// 	},
	// 	weekNo:{
	//
	// 	}
	// }



			//var sankeyDivWidth = $('#sankeyChartDiv').width();
			//$('sankeyChart').width(sankeyDivWidth);
			//drawSankey();
			//drawHeatMap();
			//drawRadarChart();
			// drawStackedBar();
			$.ajax({url: "dataset", success: function(result){
				console.log(result);
				drawStackedBar(result)
			}});
			$.ajax({url:"radarTopics", success: function(result){
				console.log(result);
				var radarTopper = result.radarTopper;
				var radarCurrentStudent = result.radarCurrentStudent;
				var radarTopics = result.radarTopics;
				var radarData = {
				    labels: radarTopics,
				    datasets: [
				        {
				            label: "Current Student",
				            backgroundColor: "rgba(179,181,198,0.2)",
				            borderColor: "rgba(179,181,198,1)",
				            pointBackgroundColor: "rgba(179,181,198,1)",
				            pointBorderColor: "#fff",
				            pointHoverBackgroundColor: "#fff",
				            pointHoverBorderColor: "rgba(179,181,198,1)",
				            data: radarCurrentStudent
				        },
				        {
				            label: "Class Topper",
				            backgroundColor: "rgba(255,99,132,0.2)",
				            borderColor: "rgba(255,99,132,1)",
				            pointBackgroundColor: "rgba(255,99,132,1)",
				            pointBorderColor: "#fff",
				            pointHoverBackgroundColor: "#fff",
				            pointHoverBorderColor: "rgba(255,99,132,1)",
				            data: radarTopper
				        }
				    ]
				};
				drawRadarChart(radarData);

			}})
		})
</script>
</html>
